* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

.paragraph {
    font-size: 30px;
}

.container {
    min-height: 100vh;
    background-color: darkgray;
    display: flex;
    flex-direction: column;
}

.header, .footer {
    flex-basis: 100%;
    padding: 10px;
    background-color: white;
    border: 2px solid black;
    display: flex;
    justify-content: center;
}

.main-content {
    flex: 1 0 400px;
    padding: 20px;
    display: flex;
    align-items: center;
    align-content: center;
    justify-content: center;
    flex-wrap: wrap;
    gap: 10px;
}

.item {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 350px;
    height: 250px;
    border: 2px solid black;
}

/* 
flex-direction: indica o alinhamento que os itens terão por padrão no flex e Row(linha)

gap: distancia entre os elementos afetados pelo flex pode ser row ou colunn

flex-wrap: define como será a quebra dos elementos flex

align-items: controla o alinhamento vertical dos itens

justify-content: controla o alinhamento horizontal

flex-basis: controla o tamanho width do elemento flex para ser usando com grow e shirink

flex-grow: controla o aumento dos itens sem modificado a quebra da pagina, onde eles iram ocupar todos espaço e s terá a quebra no valor do flex-basis.

flex-shrin: controla a diminuição dos itens  o valor padrão dele 1, quando substituímos para 2 o elemento ira diminuir primeiro no que os outro elementos.

flex: e o encurtamento do grow shrink e basis: flex(valor grow) (valor shirink) (valor basis)

order: e a ordem que os elementos ficam alinhados

 align-self: e o alinhamento de um único elemento na vertical</div></div>
*/